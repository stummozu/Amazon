<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns="http://www.springframework.org/schema/beans"
   xmlns:security="http://www.springframework.org/schema/security"
   xmlns:aop="http://www.springframework.org/schema/aop"

   xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

   <security:global-method-security pre-post-annotations="enabled" />

   <security:http auto-config='true' use-expressions="true" >
      <security:access-denied-handler error-page="/accessdenied" />
      <security:intercept-url pattern="/" access="permitAll" />
      <security:intercept-url pattern="/static/**" access="permitAll" />
      <security:intercept-url pattern="/welcome/**" access="isAuthenticated()" />
      <security:intercept-url pattern="/settings/**" access="isAuthenticated()" />
      <security:intercept-url pattern="/administration/**" access="hasAnyRole('administrator')" />
      
      <!-- for utility controller -->
      <security:intercept-url pattern="/utility/user/create" access="permitAll" />
      <security:intercept-url pattern="/utility/user/check/**" access="permitAll" />
      <security:intercept-url pattern="/utility/user/avatar/**" access="isAuthenticated()" />
          
      <security:form-login login-page="/login"
                           authentication-failure-handler-ref="authenticationFailureHandler"
                           default-target-url="/welcome" always-use-default-target="false" />

      <security:logout logout-success-url="/login" invalidate-session="true" delete-cookies="JSESSIONID"/>
      
      <security:session-management invalid-session-url="/logintimeout">
         <!-- error-if-maximum-exceeded="false" ensure that if max-sessions exceeded, the 
         org.springframework.security.web.authentication.session.SessionAuthenticationException is not thrown
         and the oldest session will be automatically invalidated.
         otherwise, putting error-if-maximum-exceeded="true" if max-sessions exceeded, the 
         org.springframework.security.web.authentication.session.SessionAuthenticationException is thrown,
         but if the user closes the browser without performing logout, the session will not be automatically invalidated,
         therefore SessionAuthenticationException will always be thrown. -->
         <security:concurrency-control max-sessions="5" error-if-maximum-exceeded="false" 
                                       session-registry-ref="sessionRegistry" expired-url="/logintimeout"/>
      </security:session-management>
      
   </security:http>
   
   
   <!-- ================= AUTHENTICATION ================= -->
   <bean id="userDetailsService" class="Amazon.common.spring.security.UserDetailsServiceImpl" />
   <security:authentication-manager>
      <security:authentication-provider user-service-ref="userDetailsService">
         <security:password-encoder hash="md5" />
      </security:authentication-provider>
   </security:authentication-manager>
   
   <bean id="authenticationHolder"
      class="Amazon.common.spring.security.AuthenticationHolder" />

   <bean factory-bean="authenticationHolder" factory-method="getAuthenticatedUser" scope="request">
      <aop:scoped-proxy />
   </bean>
   
   <bean id="authenticationFailureHandler"
      class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
      <property name="exceptionMappings">
         <props>
            <prop key="org.springframework.security.authentication.CredentialsExpiredException">/login#forgot</prop>
            <prop key="org.springframework.security.authentication.BadCredentialsException">/login?failure=badCredentials</prop>
            <prop key="org.springframework.security.authentication.DisabledException">/login?failure=userDisabled</prop>
            <!-- never thrown if error-if-maximum-exceeded="false" -->
            <prop key="org.springframework.security.web.authentication.session.SessionAuthenticationException">/login?failure=sessionAuthentication</prop>
         </props>
      </property>
      <property name="defaultFailureUrl" value="/login" />
   </bean>
   
   <!-- ================= SESSION ================= -->
   <bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
      
</beans>