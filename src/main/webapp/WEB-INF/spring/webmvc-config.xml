<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc"
   xmlns:context="http://www.springframework.org/schema/context"

   xsi:schemaLocation="
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

   <!-- Enable Spring Annotation -->
   <mvc:annotation-driven
      content-negotiation-manager="contentNegotiationManager" />

   <bean id="contentNegotiationManager"
      class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
      <property name="favorPathExtension" value="false" />
      <property name="favorParameter" value="false" />
      <property name="ignoreAcceptHeader" value="false" />
      <property name="mediaTypes">
         <value>
            atom=application/atom+xml
            html=text/html
            json=application/json
            *=*/*
         </value>
      </property>
   </bean>

   <!-- The controllers are auto detected POJOs labeled with the @Controller annotation. -->
   <context:component-scan  base-package="Amazon.presentation" use-default-filters="false">
      <context:include-filter expression="org.springframework.stereotype.Controller" type="annotation"/>
   </context:component-scan>

   <!-- Handles HTTP GET requests for /static/** by efficiently serving up 
      static resources that are in src/main/webapp/resources/ directory and downloaded 
      as webjars. We apply caching for our static resources by creating a cache-control 
      with a maxAge of 30 days -->
   <mvc:resources mapping="/static/**" location="/resources/, /webjars/">
      <mvc:cache-control cache-public="true" max-age="2592000" />
      <mvc:resource-chain resource-cache="true">
         <mvc:resolvers>
            <!-- Spring will automatically add the WebJarsResourceResolver 
               if the org.webjars:webjars-locator library resides on the classpath. This 
               resolver allows you to remove the version number in the path (e.g., static/jquery/2.2.3/jquery.min.js). -->
            <bean
               class="org.springframework.web.servlet.resource.WebJarsResourceResolver" />
         </mvc:resolvers>
      </mvc:resource-chain>
   </mvc:resources>

   
   
   <!-- Selects a static view for rendering without the need for an explicit controller -->
   <mvc:view-controller path="/" view-name="standalone.login" />
   <mvc:view-controller path="/welcome" view-name="common.welcome" />
   <mvc:view-controller path="/login" view-name="standalone.login" />
   <mvc:view-controller path="/login#forgot" view-name="standalone.login" />
   <mvc:view-controller path="/logintimeout" view-name="standalone.logintimeout" />
   <mvc:view-controller path="/accessdenied" view-name="standalone.accessdenied" />
   <mvc:view-controller path="/resourcenotfound" view-name="standalone.resourcenotfound" />


   <!-- ================= INTERNATIONALIZATION ================= -->
   <!-- Register "global" interceptor beans to apply to all registered HandlerMappings -->
   <mvc:interceptors>
      <bean
         class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
         <property name="paramName" value="lang" />
      </bean>
   </mvc:interceptors>

   <!-- Load localized messages files -->
   <bean id="messageSource"
      class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
      <property name="fallbackToSystemLocale" value="false" />
      <property name="basenames">
         <list>
            <value>WEB-INF/i18n/mobiles</value>
         </list>
      </property>
   </bean>
   
   <!-- Store preferred language configuration in a cookie -->
   <bean id="localeResolver"
      class="org.springframework.web.servlet.i18n.CookieLocaleResolver" >
      <property name="cookieName" value="locale" />      
   </bean>

   <!-- ================= TILES ================= -->
   <bean id="tilesConfigurer"
      class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
      <property name="definitions">
         <list>
            <value>/WEB-INF/spring/tiles-defs.xml</value>
         </list>
      </property>
   </bean>

   <bean id="tilesViewResolver"
      class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" />

   <bean id="viewResolver"
      class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
      <property name="basename" value="views" />
   </bean>
   
   <!-- Multipart Resolver -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
     <!-- one of the properties available; the maximum file size in bytes -->
     <property name="maxUploadSize" value="90000000"/>
    </bean> 

</beans>